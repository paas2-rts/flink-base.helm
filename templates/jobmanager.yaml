apiVersion: apps/v1
{{- if .Values.global.jobmanager.statefulset }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "flink.fullname" . }}-jobmanager
  labels:
{{ include "flink.labels" . | indent 4 }}
    component: jobmanager
  annotations:
  {{- range $key, $value := .Values.global.jobmanager.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.global.jobmanager.replicaCount }}
  {{- if .Values.global.jobmanager.statefulset }}
  podManagementPolicy: {{ .Values.global.jobmanager.podManagementPolicy }}
  {{- else }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flink.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: jobmanager
  {{- if .Values.global.jobmanager.statefulset }}
  serviceName: {{ include "flink.fullname" . }}-jobmanager-headless
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "flink.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: jobmanager
      annotations:
      {{- range $key, $value := .Values.global.jobmanager.podAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
      {{- end }}
    spec:
    {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "jobmanager.serviceAccount" . }}
      securityContext:
        {{ toYaml .Values.global.securityContext | indent 8 }}
      initContainers:
      {{- range $ct, $params := .Values.global.jobmanager.initContainers }}
        - name: {{ $ct }}
          image: {{ $params.image }}
          command:
          {{- range $params.command }}
            - {{ . }}
          {{- end }}
      {{- end }}
      containers:
        - name: jobmanager
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          workingDir: {{ .Values.global.flink.workDir }}
          #args: ["standalone-job", "--job-classname", "org.example.sideinput.SideInputTest"] # optional arguments: ["--job-id", "<job id>", "--fromSavepoint", "/path/to/savepoint", "--allowNonRestoredState"]
          command:
            - "/bin/bash"
            - "-c"
            - {{ include "jobmanager.command" . | quote }}
          env:
            - name: JVM_ARGS
              value: {{ tpl .Values.global.jobmanager.jvmArgs . | quote }}
            - name: FLINK_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if .Values.global.extraEnvs }}
          {{- toYaml .Values.global.extraEnvs | nindent 12 }}
          {{- end }}
          {{- if .Values.global.jobmanager.extraEnvs }}
          {{- toYaml .Values.global.jobmanager.extraEnvs | nindent 12 }}
          {{- end }}
          envFrom:
          {{- if and .Values.global.secrets.bitnamiSealedSecrets.enabled .Values.global.secrets.bitnamiSealedSecrets.sealedSecretEnvs }}
            - secretRef:
                name: {{ .Release.Name }}-secretenvs
          {{- end }}
          ports:
          {{- range $name, $port := .Values.global.jobmanager.ports }}
            - containerPort: {{ $port }}
              name: {{ $name }}
          {{- end }}
          {{- if .Values.global.flink.monitoring.enabled }}
            - containerPort: {{ .Values.global.flink.monitoring.port }}
              name: metrics
          {{- end }}
          {{- if .Values.global.jobmanager.highAvailability.enabled }}
            - containerPort: {{ .Values.global.jobmanager.highAvailability.syncPort }}
              name: ha
          {{- end }}
          readinessProbe:
            tcpSocket:
           {{- if .Values.global.jobmanager.highAvailability.enabled }}
              port: {{ .Values.global.jobmanager.highAvailability.syncPort }}
           {{- else }}
              port: {{ .Values.global.jobmanager.ports.rpc }}
            {{- end }}
            periodSeconds: {{ .Values.global.jobmanager.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.global.jobmanager.readinessProbe.initialDelaySeconds }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.global.jobmanager.ports.blob }}
            initialDelaySeconds: {{ .Values.global.jobmanager.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.global.jobmanager.livenessProbe.periodSeconds }}
          volumeMounts:
            - name: flink-config-volume
              mountPath: {{ .Values.global.flink.workDir }}/conf/flink-conf.yaml.tpl
              subPath: flink-conf.yaml.tpl
            - name: flink-config-volume
              mountPath: {{ .Values.global.flink.workDir }}/conf/log4j.properties
              subPath: log4j.properties
            - name: flink-config-volume
              mountPath: {{ .Values.global.flink.workDir }}/conf/log4j-console.properties
              subPath: log4j.properties
            - name: flink-config-volume
              mountPath: {{ .Values.global.flink.workDir }}/conf/security.properties
              subPath: security.properties
              {{- if .Values.global.jobmanager.highAvailability.enabled }}
            - name: flink-config-volume
              mountPath: {{ .Values.global.flink.workDir }}/conf/masters
              subPath: masters
              {{- end }}
          {{- range $secret := .Values.global.secrets.kubernetesSecrets }}
            {{- if $secret.mountPath }}
              {{- if $secret.keys }}
                {{- range $key := $secret.keys }}
            - name: {{ include "flink.fullname" $ }}-{{ $secret.name }}
              mountPath: {{ $secret.mountPath }}/{{ $key }}
              subPath: {{ $key }}
              readOnly: true
                {{- end }}
              {{- else }}
            - name: {{ include "flink.fullname" $ }}-{{ $secret.name }}
              mountPath: {{ $secret.mountPath }}
              readOnly: true
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.global.jobmanager.extraVolumeMounts -}}
            {{ toYaml .Values.global.jobmanager.extraVolumeMounts | nindent 12 }}
          {{- end }}
          {{- if and .Values.global.jobmanager.persistent.enabled .Values.global.jobmanager.statefulset }}
            - name: jobmanager-data
              mountPath: {{ .Values.global.jobmanager.persistent.mountPath }}
          {{- end }}
          {{- if and (and .Values.global.secrets.bitnamiSealedSecrets.enabled .Values.global.secrets.bitnamiSealedSecrets.sealedSecretFiles) .Values.global.secrets.bitnamiSealedSecrets.sealedSecretFilesPath }}
            - name: sealed-secret-files
              mountPath: {{ .Values.global.secrets.bitnamiSealedSecrets.sealedSecretFilesPath }}
          {{- end }}
          resources:
            {{- toYaml .Values.global.jobmanager.resources | nindent 12 }}

      volumes:
        - name: flink-config-volume
          configMap:
            name: {{ include "flink.fullname" . }}-config
            items:
              - key: flink-conf.yaml
                path: flink-conf.yaml.tpl
              - key: log4j.properties
                path: log4j.properties
              - key: security.properties
                path: security.properties
              {{- if .Values.global.jobmanager.highAvailability.enabled }}
              - key: masters
                path: masters
              {{- end }}
      {{- range .Values.global.secrets.kubernetesSecrets }}
        - name: {{ include "flink.fullname" $ }}-{{ .name }}
          secret:
            secretName: {{ .name }}
      {{- end }}
      {{- if .Values.global.jobmanager.extraVolumes -}}
        {{ toYaml .Values.global.jobmanager.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if and (and .Values.global.secrets.bitnamiSealedSecrets.enabled .Values.global.secrets.bitnamiSealedSecrets.sealedSecretFiles) .Values.global.secrets.bitnamiSealedSecrets.sealedSecretFilesPath }}
        - name: sealed-secret-files
          secret:
            secretName: {{ .Release.Name }}-secretfiles
      {{- end }}

      {{- with .Values.global.jobmanager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.global.jobmanager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.jobmanager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if and .Values.global.jobmanager.persistent.enabled .Values.global.jobmanager.statefulset }}
  volumeClaimTemplates:
    - metadata:
        name: jobmanager-data
        labels:
{{ include "flink.labels" . | indent 10 }}
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if eq (kindIs "invalid" .Values.global.jobmanager.persistent.storageClass) false }}
        storageClassName: {{ .Values.global.jobmanager.persistent.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.global.jobmanager.persistent.size }}
{{- end }}
